{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/highlight.directive.ts","webpack:///./src/app/quotes-details/quotes-details.component.css","webpack:///./src/app/quotes-details/quotes-details.component.html","webpack:///./src/app/quotes-details/quotes-details.component.ts","webpack:///./src/app/quotes-form/quotes-form.component.css","webpack:///./src/app/quotes-form/quotes-form.component.html","webpack:///./src/app/quotes-form/quotes-form.component.ts","webpack:///./src/app/quotes.ts","webpack:///./src/app/quotes/quotes.component.css","webpack:///./src/app/quotes/quotes.component.html","webpack:///./src/app/quotes/quotes.component.ts","webpack:///./src/app/timepassed.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-quotes></app-quotes>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Quotes';\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from \"./app.component\";\nimport { HighlightDirective } from \"./highlight.directive\";\nimport { TimepassedPipe } from \"./timepassed.pipe\";\nimport { QuotesFormComponent } from \"./quotes-form/quotes-form.component\";\nimport { QuotesComponent } from \"./quotes/quotes.component\";\nimport { QuotesDetailsComponent } from \"./quotes-details/quotes-details.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HighlightDirective,\n    TimepassedPipe,\n    QuotesFormComponent,\n    QuotesComponent,\n    QuotesDetailsComponent\n  ],\n  imports: [BrowserModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective {\n\n  constructor() { }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <h2>by {{quote.author}}</h2>\\n  <div>\\n    <p>added by {{quote.user}}</p>\\n  </div>\\n  <div>\\n    <p>\\n      <button class=\\\"btn btn-sm btn-dark\\\" on-click=\\\"addUpVotes()\\\">up-vote</button> {{quote.upvotes}} </p>\\n    <p>\\n      <button class=\\\"btn btn-sm btn-dark\\\" on-click=\\\"addDownVotes()\\\">down-votes</button>\\n      down-votes {{quote.downvotes}} </p>\\n  </div>\\n  <div>\\n    <p>quote {{quote.id}} </p>\\n    <p> {{quote.timepassed}} seconds ago </p>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from \"@angular/core\";\nimport { Quotes } from \"../quotes\";\n\n@Component({\n  selector: \"app-quotes-details\",\n  templateUrl: \"./quotes-details.component.html\",\n  styleUrls: [\"./quotes-details.component.css\"]\n})\nexport class QuotesDetailsComponent implements OnInit {\n  constructor() {}\n\n  @Input()\n  quote: Quotes;\n\n  addUpVotes() {\n    this.quote.upvotes += 1;\n  }\n  addDownVotes() {\n    this.quote.downvotes += 1;\n  }\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <div>\\n    <button on-click=\\\"clearInputs()\\\">New Quote</button>\\n  </div>\\n  <form action=\\\"submit\\\" (ngSubmit)=\\\"submitQuote()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"form-control-lg d-flex w-auto\\\" for=\\\"quote\\\">Add a new quote</label>\\n      <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"newQuote.quote\\\" name=\\\"quote\\\" id=\\\"quoteInput\\\" cols=\\\"30\\\" rows=\\\"4\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-group-sm\\\">\\n      <label class=\\\"form-control-lg\\\" for=\\\"author\\\">Author</label>\\n      <input class=\\\"form-control-sm\\\" [(ngModel)]=\\\"newQuote.author\\\" name=\\\"author\\\" type=\\\"text\\\">\\n    </div>\\n    <div class=\\\"form-group-sm\\\">\\n      <label class=\\\"form-control-lg\\\" for=\\\"author\\\">User</label>\\n      <input class=\\\"form-control-sm\\\" [(ngModel)]=\\\"newQuote.user\\\" name=\\\"user\\\" type=\\\"text\\\">\\n    </div>\\n    <button (click)=\\\"publishQuote()\\\">Submit Quote</button>\\n  </form>\\n</div>\\n\"","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\nimport { Quotes } from \"../quotes\";\n\n@Component({\n  selector: \"app-quotes-form\",\n  templateUrl: \"./quotes-form.component.html\",\n  styleUrls: [\"./quotes-form.component.css\"]\n})\nexport class QuotesFormComponent implements OnInit {\n  constructor() {}\n\n  newQuote = new Quotes(0, \"\", 0, 0, \"\", \"\", new Date());\n\n  submitQuote(): void {\n    this.newQuote;\n  }\n\n  @Output()\n  addQuote: EventEmitter<Quotes> = new EventEmitter<Quotes>();\n\n  publishQuote() {\n    this.addQuote.emit(this.newQuote);\n  }\n\n  clearInputs() {\n    this.newQuote = new Quotes(0, \"\", 0, 0, \"\", \"\", new Date());\n  }\n\n  ngOnInit() {}\n}\n","export class Quotes {\n  constructor(\n    public id: number,\n    public quote: string,\n    public upvotes: number,\n    public downvotes: number,\n    public author: string,\n    public user: string,\n    public timepassed: Date\n  ) {}\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <app-quotes-form (addQuote)=\\\"getNewQuote($event)\\\"></app-quotes-form>\\n    <div>\\n      <h1 class=\\\"mt-5\\\">Published Quotes</h1>\\n      <ul>\\n        <li *ngFor='let quote of quotes'>\\n          <p> {{quote.quote}} </p>\\n          <app-quotes-details [quote]='quote'></app-quotes-details>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from \"@angular/core\";\nimport { Quotes } from \"../quotes\";\n\n@Component({\n  selector: \"app-quotes\",\n  templateUrl: \"./quotes.component.html\",\n  styleUrls: [\"./quotes.component.css\"]\n})\nexport class QuotesComponent implements OnInit {\n  constructor() {}\n\n  public quotes: Array<Quotes> = [];\n  public newQuote: Quotes = new Quotes(0, \"\", 0, 0, \"\", \"\", new Date());\n\n  addId() {\n    return this.quotes.length + 1;\n  }\n\n  getNewQuote(quote: Quotes) {\n    this.quotes.push(quote);\n  }\n\n  ngOnInit() {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timepassed'\n})\nexport class TimepassedPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return null;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}